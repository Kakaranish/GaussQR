
	Vector vec1(3);
	Vector vec2(3);

	vec1(0) = 1;
	vec1(1) = 2;
	vec1(2) = 3;
	std::cout << "vec1 = " << vec1 << std::endl;


	vec2(0) = 4;
	vec2(1) = 5;
	vec2(2) = 6;
	std::cout << "vec2 = " << vec2 << std::endl;

	std::cout << "After projection =\t" << project(vec1, vec2) << std::endl << std::endl;
	
	
	
	
	
	
	
	
	
	
	/*
	Vector<int>vec1(4);
	for (int i = 0; i < 4; i++)
		vec1(i) = i;
	std::cout << vec1 << std::endl;
	std::cout << "vec1 length = " << vec1.getLength() << std::endl;


	Vector<int>vec2(4);
	for (int i = 0; i < 4; i++)
		vec2(i) = i*2;
	std::cout << vec2 << std::endl;

	std::cout << vec2.multiplyByScalar(2) << std::endl;
	*/

	/*
	Matrix A(2, 3);
	A(0, 0) = 2;
	A(0, 1) = 1;
	A(0, 2) = 3;
	A(1, 0) = -1;
	A(1, 1) = 2;
	A(1, 2) = 4;


	//findQMatrix(A);

	Matrix B(3, 2);
	B(0, 0) = 1;
	B(0, 1) = 3;
	B(1, 0) = 2;
	B(1, 1) = -2;
	B(2, 0) = -1;
	B(2, 1) = 4;

	A.show();
	std::cout << std::endl << std::endl;
	B.show();
	std::cout << std::endl << std::endl;


	Matrix C(2, 2);
	C = Matrix::multiply(A, B);
	C.show();
	std::cout << std::endl << std::endl;
	

	A.transpose();
	A.show();
	std::cout << std::endl << std::endl;

	*/


	/*
	BandMatrix bandMatrix(7, 4, 1, 1 );
	bandMatrix.show();
	Vector BVector(7);
	for (unsigned i = 0; i < 7; i++)
		BVector(i) = i + 1;

	Vector answer(7);
	*/

	//if (gauss(bandMatrix, BVector, answer))
	//	std::cout << answer << std::endl;


	//std::cout << std::endl << std::endl;
	

	
	
	
	
	
	
	
	
	